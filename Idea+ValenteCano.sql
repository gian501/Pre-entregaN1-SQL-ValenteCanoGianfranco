-- -----------------------------------------------------
-- CREACION DE TABLAS 
-- -----------------------------------------------------
-- MySQL Script generated by MySQL Workbench;
-- Thu Aug 31 18:56:03 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Kalimera Distribution
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Kalimera Distribution
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Kalimera Distribution` DEFAULT CHARACTER SET utf8 ;
USE `Kalimera Distribution` ;

-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`SUCURSALES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`SUCURSALES` (
  `Id_sucursal` INT NOT NULL AUTO_INCREMENT,
  `Nombre_sucursal` TEXT(45) NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  `Id_clientes` INT NULL,
  `Id_producto` INT NULL,
  `Id_proveedor` INT NULL,
  `Id_personal` INT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `CP` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Id_sucursal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PERSONAL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`PERSONAL` (
  `Id_personal` INT NOT NULL AUTO_INCREMENT,
  `Nombre_personal` TEXT(50) NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `CP` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  `Fecha_de_ingreso` DATETIME NOT NULL,
  `CBU` INT NOT NULL,
  `Id_sucursal` INT NOT NULL,
  PRIMARY KEY (`Id_personal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PROVEEDORES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`PROVEEDORES` (
  `Id_proveedor` INT NOT NULL AUTO_INCREMENT,
  `Nombre_proveedor` VARCHAR(45) NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `CP` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `IVA` VARCHAR(45) NOT NULL,
  `Condicion_de_pago` TEXT(30) NOT NULL,
  `Codigo_rubro` INT NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  PRIMARY KEY (`Id_proveedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PRODUCTOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`PRODUCTOS` (
  `Id_producto` INT NOT NULL AUTO_INCREMENT,
  `Nombre_producto` VARCHAR(45) NOT NULL,
  `Codigo_rubro` INT NOT NULL,
  `Nombre_rubro` TEXT(50) NOT NULL,
  `Id_proveedor` INT NOT NULL,
  `Precio_x_unidad` DECIMAL(12) NOT NULL,
  `Unidades_x_Bulto` INT NOT NULL,
  `Unidades_x_Pallets` INT NULL,
  `Descuentos` VARCHAR(30) NOT NULL,
  `Stock` INT NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  PRIMARY KEY (`Id_producto`),
  INDEX `id_proveedor_idx` (`Id_proveedor` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCTOS_PROVEEDORES`
    FOREIGN KEY (`Id_proveedor`)
    REFERENCES `Kalimera Distribution`.`PROVEEDORES` (`Id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`CLIENTES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`CLIENTES` (
  `Id_clientes` INT NOT NULL AUTO_INCREMENT,
  `Nombre_cliente` VARCHAR(45) NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `CP` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `IVA` VARCHAR(45) NOT NULL,
  `Condicion_de_pago` TEXT(30) NOT NULL,
  `Codigo_Zona` INT NOT NULL,
  `Numero_de_compras` INT NOT NULL,
  `Fecha_ultima_compra` DATETIME NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  PRIMARY KEY (`Id_clientes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PEDIDOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`PEDIDOS` (
  `Id_pedido` INT NOT NULL AUTO_INCREMENT,
  `Id_proveedor` INT NOT NULL,
  `Id_sucursal` INT NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `CP` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `IVA` VARCHAR(45) NOT NULL,
  `Fecha` DATETIME NOT NULL,
  `id_producto` INT NULL,
  `Cantidad` INT NOT NULL,
  `Precio_x_unidad` DECIMAL(12) NOT NULL,
  `Tipo_de_Factura` TEXT(3) NOT NULL,
  `TotalNeto` DECIMAL(12) NOT NULL,
  PRIMARY KEY (`Id_pedido`),
  INDEX `id_sucursal_idx` (`Id_sucursal` ASC) VISIBLE,
  INDEX `id_proveedor_idx` (`Id_proveedor` ASC) VISIBLE,
  CONSTRAINT `fk_PEDIDOS_SUCURSAL3`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`SUCURSALES` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PEDIDOS_PROVEEDORES`
    FOREIGN KEY (`Id_proveedor`)
    REFERENCES `Kalimera Distribution`.`PROVEEDORES` (`Id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`VENTAS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`VENTAS` (
  `Id_factura` INT NOT NULL,
  `Id_sucursal` INT NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `CP` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `IVA` VARCHAR(45) NOT NULL,
  `Id_clientes` INT NOT NULL,
  `Codigo_Zona` INT NOT NULL,
  `Condicion_de_pago` TEXT(30) NOT NULL,
  `Fecha` DATETIME NOT NULL,
  `Descuentos` VARCHAR(30) NOT NULL,
  `Observasiones` VARCHAR(225) NULL,
  `Id_producto` INT NULL,
  `Precio_x_unidad` DECIMAL(12) NOT NULL,
  `TotalNeto` DECIMAL(12) NOT NULL,
  `Cantidad` INT NOT NULL,
  `Tipo_de_Factura` TEXT(3) NOT NULL,
  PRIMARY KEY (`Id_factura`),
  INDEX `id_clientes_idx` (`Id_clientes` ASC) VISIBLE,
  INDEX `Id_sucursal_idx` (`Id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_VENTAS_CLIENTES`
    FOREIGN KEY (`Id_clientes`)
    REFERENCES `Kalimera Distribution`.`CLIENTES` (`Id_clientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VENTAS_SUCURSAL2`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`SUCURSALES` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - PERSONAL DE SUCURSALES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI - PERSONAL DE SUCURSALES` (
  `Id_personal` INT NOT NULL COMMENT 'TI = Tabla intermedia: se realizo esta tabla con el objetivo de mostrar la relación de la tabla de hechos con la tabla personal. Se establece una relación de N-N, ya que según al existir varias sucursales estas tienen mucho personal que pueden compartir o no.',
  `Id_sucursal` INT NOT NULL,
  PRIMARY KEY (`Id_personal`, `Id_sucursal`),
  INDEX `fk_PERSONAL_has_KALIMERA DISTRIBUTION_KALIMERA DISTRIBUTION_idx` (`Id_sucursal` ASC) VISIBLE,
  INDEX `fk_PERSONAL_has_KALIMERA DISTRIBUTION_PERSONAL1_idx` (`Id_personal` ASC) VISIBLE,
  CONSTRAINT `fk_PERSONAL_has_KALIMERA DISTRIBUTION_PERSONAL1`
    FOREIGN KEY (`Id_personal`)
    REFERENCES `Kalimera Distribution`.`PERSONAL` (`Id_personal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PERSONAL_has_KALIMERA DISTRIBUTION_KALIMERA DISTRIBUTION1`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`SUCURSALES` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI- PROVEEDORES DE SUCURSALES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI- PROVEEDORES DE SUCURSALES` (
  `Id_sucursal` INT NOT NULL COMMENT 'TI = Tabla intermedia: se realizo esta tabla con el objetivo de mostrar la relación de la tabla de hechos con la tabla PROVEEDORES. Se establece una relación de N-N, ya que según al existir varias sucursales estas tienen diferentes proveedores que pueden tener interacción con mas de una sucursal.',
  `Id_proveedor` INT NOT NULL,
  PRIMARY KEY (`Id_sucursal`, `Id_proveedor`),
  INDEX `fk_KALIMERA DISTRIBUTION_has_PROVEEDORES_PROVEEDORES1_idx` (`Id_proveedor` ASC) VISIBLE,
  INDEX `fk_KALIMERA DISTRIBUTION_has_PROVEEDORES_KALIMERA DISTRIBUT_idx` (`Id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_PROVEEDORES_KALIMERA DISTRIBUTION1`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`SUCURSALES` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_PROVEEDORES_PROVEEDORES1`
    FOREIGN KEY (`Id_proveedor`)
    REFERENCES `Kalimera Distribution`.`PROVEEDORES` (`Id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - CLIENTES DE SUCURSALES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI - CLIENTES DE SUCURSALES` (
  `Id_sucursal` INT NOT NULL COMMENT 'TI = Tabla intermedia: se realizo esta tabla con el objetivo de mostrar la relación de la tabla de hechos con la tabla Clientes. Se establece una relación de N-N, ya que según al existir varias sucursales estas tienen diferentes clientes que pueden tener interacción con mas de una sucursal.',
  `Id_clientes` INT NOT NULL,
  PRIMARY KEY (`Id_sucursal`, `Id_clientes`),
  INDEX `fk_KALIMERA DISTRIBUTION_has_CLIENTES_CLIENTES1_idx` (`Id_clientes` ASC) VISIBLE,
  INDEX `fk_KALIMERA DISTRIBUTION_has_CLIENTES_KALIMERA DISTRIBUTION_idx` (`Id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_CLIENTES_KALIMERA DISTRIBUTION1`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`SUCURSALES` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_CLIENTES_CLIENTES1`
    FOREIGN KEY (`Id_clientes`)
    REFERENCES `Kalimera Distribution`.`CLIENTES` (`Id_clientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - PRODUCTOS DE SUCURSALES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI - PRODUCTOS DE SUCURSALES` (
  `Id_sucursal` INT NOT NULL COMMENT 'TI = Tabla intermedia: se realizo esta tabla con el objetivo de mostrar la relación de la tabla de hechos con la tabla PRODUCTOS. Se establece una relación de N-N, ya que según al existir varias sucursales estas tienen diferentes productos que pueden o no comercializarse en una o en otras.',
  `Id_producto` INT NOT NULL,
  PRIMARY KEY (`Id_sucursal`, `Id_producto`),
  INDEX `fk_KALIMERA DISTRIBUTION_has_PRODUCTOS_PRODUCTOS1_idx` (`Id_producto` ASC) VISIBLE,
  INDEX `fk_KALIMERA DISTRIBUTION_has_PRODUCTOS_KALIMERA DISTRIBUTIO_idx` (`Id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_PRODUCTOS_KALIMERA DISTRIBUTION1`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`SUCURSALES` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_PRODUCTOS_PRODUCTOS1`
    FOREIGN KEY (`Id_producto`)
    REFERENCES `Kalimera Distribution`.`PRODUCTOS` (`Id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - PRODUCTOS VENTAS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI - PRODUCTOS VENTAS` (
  `Id_producto` INT NOT NULL,
  `Id_factura` INT NOT NULL,
  PRIMARY KEY (`Id_producto`, `Id_factura`),
  INDEX `fk_PRODUCTOS_has_VENTAS_VENTAS1_idx` (`Id_factura` ASC) VISIBLE,
  INDEX `fk_PRODUCTOS_has_VENTAS_PRODUCTOS1_idx` (`Id_producto` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCTOS_has_VENTAS_PRODUCTOS1`
    FOREIGN KEY (`Id_producto`)
    REFERENCES `Kalimera Distribution`.`PRODUCTOS` (`Id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCTOS_has_VENTAS_VENTAS1`
    FOREIGN KEY (`Id_factura`)
    REFERENCES `Kalimera Distribution`.`VENTAS` (`Id_factura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI -PRODUCTOS PEDIDOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI -PRODUCTOS PEDIDOS` (
  `Id_producto` INT NOT NULL,
  `Id_pedido` INT NOT NULL,
  PRIMARY KEY (`Id_producto`, `Id_pedido`),
  INDEX `fk_PEDIDOS_has_PRODUCTOS_PRODUCTOS2_idx` (`Id_producto` ASC) VISIBLE,
  INDEX `fk_PEDIDOS_has_PRODUCTOS_PEDIDOS2_idx` (`Id_pedido` ASC) VISIBLE,
  CONSTRAINT `fk_PEDIDOS_has_PRODUCTOS_PEDIDOS2`
    FOREIGN KEY (`Id_pedido`)
    REFERENCES `Kalimera Distribution`.`PEDIDOS` (`Id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PEDIDOS_has_PRODUCTOS_PRODUCTOS2`
    FOREIGN KEY (`Id_producto`)
    REFERENCES `Kalimera Distribution`.`PRODUCTOS` (`Id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- INERCIÓN DE DATOS 
-- -----------------------------------------------------
SELECT *
FROM SUCURSALES;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`SUCURSALES`
-- -----------------------------------------------------
INSERT INTO SUCURSALES (Id_sucursal, Nombre_sucursal, Nombre_area, Id_clientes, Id_producto, Id_proveedor, Id_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT) 
VALUES (1, 'Salta', 'General', NULL, NULL, NULL, NULL, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', '4400', 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4');
INSERT INTO SUCURSALES (Id_sucursal, Nombre_sucursal, Nombre_area, Id_clientes, Id_producto, Id_proveedor, Id_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT) 
VALUES (2, 'Jujuy', 'General', NULL, NULL, NULL, NULL, 'PALPALA 4612', 'JUJUY', 'PALPALA', '4612', 'kalim_jujuy@gmail.com', '0388-4234256', '24-56894578-4');
INSERT INTO SUCURSALES (Id_sucursal, Nombre_sucursal, Nombre_area, Id_clientes, Id_producto, Id_proveedor, Id_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT) 
VALUES (3, 'Tucuman', 'General', NULL, NULL, NULL, NULL, 'AV. ALFONSINA STORNI 97', 'TUCUMAN', 'CAPITAL', '4000', 'kalim_tuc@gmail.com', '0381-4568978', '24-78451232-4');


SELECT *
FROM PERSONAL;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PERSONAL`
-- -----------------------------------------------------
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (1, 'ALEXIA PEJINAKIS', 'IRUYA 359', 'SALTA', 'CAPITAL', 4400, 'a.peji@gmail.com', '0387-6821709', '22-35897856-4', 'ADMINISTRACION', '2022-06-18', '266269968', 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (2, 'FERNANDO FORTUNY', 'CEIBO 3698', 'SALTA', 'CAPITAL', 4400, 'f.ortun@gmail.com', '0387-6984561', '20-17358965-4', 'STOCK', '2018-09-17', '123456789', 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (3, 'JOSE PEREZ', 'AV. INDEPENDENCIA 1568', 'SALTA', 'CAPITAL', 4400, 'j.p@gmail.com', '0387-5936852', '20-18357951-4', 'STOCK', '2018-06-04', '789456123', 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (4, 'ADRIANA CANO', 'RIVADAVIA 987', 'SALTA', 'CAPITAL', 4400, 'a.cano@gmail.com', '0387-5741528', '21-15897456-4', 'ADMINISTRACION', '2021-06-01', '321654987', 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (5, 'JUAN SOLA', 'MITRE 698', 'SALTA', 'CAPITAL', 4400, 'sola.j@gmail.com', '0387-5234568', '21-5897123-4', 'VENTAS', '2001-02-02', '741852963', 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (6, 'NICOLAS LATORRE', 'BALCARCE 785', 'SALTA', 'CAPITAL', 4400, 'lato.p@gmail.com', '0387-4564879', '22-29865475-4', 'VENTAS', '2019-11-21', '369258741', 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (7, 'RAQUEL ZARIF', 'AV.ARENALES 1289', 'SALTA', 'CAPITAL', 4400, 'z.rachel@gmail.com', '0387-4369852', '22-12987654-4', 'ADMINISTRACION', '2009-02-24', '159753654', 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (8, 'MAURICIO VACCO', 'NARANJO 852', 'SALTA', 'CAPITAL', 4400, 'vacco.mau@gmail.com', '0387-4357951', '20-12356789-4', 'STOCK', '2017-02-24', '951753654', 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (9, 'TOMAS SANCHEZ', 'VICENTE LOPEZ 569', 'SALTA', 'CAPITAL', 4400, 'sanc.t@gmail.com', '0387-5869745', '24-28987654-4', 'STOCK', '2017-02-20', '753951231', 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (10, 'GIANFRANCO VALENTE', 'TILOS 458', 'SALTA', 'CAPITAL', 4400, 'g.valente@gmail.com', '0387-6987541', '24-8611740-4', 'ADMINISTRACION', '2023-02-18', '236589741', 1);

SELECT *
FROM PROVEEDORES;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PROVEEDORES`
-- -----------------------------------------------------
INSERT INTO PROVEEDORES (Id_proveedor, Nombre_proveedor, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_rubro, Nombre_area) 
VALUES (1, 'DANONE.SA', 'AV. CERRITO 568 8B', 'CIUDAD AUTONOMA DE BUENOS AIRES', 'CIUDAD AUTONOMA DE BUENOS AIRES', 1119, 'danonesa@emp.com', '011-4859647', '20-379654321-4', 'AR', 'CANCELADO', '1', 'ADMINISTRACION');
INSERT INTO PROVEEDORES (Id_proveedor, Nombre_proveedor, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_rubro, Nombre_area) 
VALUES (2, 'COCA-COLA.SA', 'AV. CAÑUELAS 611', 'BUENOS AIRES', 'CAÑUELAS', 1814, 'coca.cola@cocacola.com', '011-4519856', '20-369789147-4', 'AR', 'CANCELADO', '1', 'ADMINISTRACION');
INSERT INTO PROVEEDORES (Id_proveedor, Nombre_proveedor, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_rubro, Nombre_area) 
VALUES (3, 'UNILEVER.SA', 'AV. LIBERTADOR 2368', 'CIUDAD AUTONOMA DE BUENOS AIRES', 'CIUDAD AUTONOMA DE BUENOS AIRES', 1119, 'unileber.sa@unile.com', '011-4116532', '20-364987652-4', 'AR', 'CANCELADO', 2, 'ADMINISTRACION');


SELECT *
FROM PRODUCTOS;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PRODUCTOS`
-- -----------------------------------------------------
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (1, 'AGUA SABORIZADA SABOR LIMON 2.25L', 1, 'BEBIDAS', 1, 560.00, 6, 36, '0%', 236, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (2, 'AGUA SABORIZADA SABOR NARANJA 2.25L', 1, 'BEBIDAS', 1, 560.00, 6, 36, '0%', 150, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (3, 'AGUA SABORIZADA SABOR UVA 2.25L', 1, 'BEBIDAS', 1, 560.00, 6, 36, '0%', 654, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (4, 'AGUA SABORIZADA SABOR POMELO 2.25L', 1, 'BEBIDAS', 1, 560.00, 6, 36, '0%', 352, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (5, 'AGUA SABORIZADA SABOR MANZANA 2.25L', 1, 'BEBIDAS', 1, 560.00, 6, 36, '0%', 230, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (6, 'AGUA VILLAVICENCIO 1.25L', 1, 'BEBIDAS', 1, 500.00, 6, 52, '0%', 5000, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (7, 'AGUA VILLAVICENCIO 2.25L', 1, 'BEBIDAS', 1, 700.00, 6, 36, '0%', 3000, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (8, 'AGUA VILLAVICENCIO 6.0L', 1, 'BEBIDAS', 1, 1200.00, 2, 60, '0%', 2000, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (9, 'COCA-COLA 2.25L', 1, 'BEBIDAS', 2, 1250.00, 6, 50, '0%', 800, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (10, 'COCA-COLA 1.50L', 1, 'BEBIDAS', 2, 890.00, 6, 50, '0%', 90, 'STOCK');


SELECT *
FROM CLIENTES;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`CLIENTES`
-- -----------------------------------------------------
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area) 
VALUES (1, 'LA TIENDA.SA', 'CEIBALITO 365', 'SALTA', 'CAPITAL', 4400, 'l.tiendasa@gmail.com', '0387-4925587', '20-2036987-2', 'AR', 'CANCELADO', 2, 32, '2023-08-25', 'VENTAS');
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area) 
VALUES (2, 'PEPE.SRT', 'MITRE 741', 'SALTA', 'CAPITAL', 4400, 'pepe@gmail.com', '0387-4225689', '20-2035489-2', 'RI', 'CANCELADO', 1, 689, '2023-08-14', 'VENTAS');
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area) 
VALUES (3, 'HONKONG', 'AV.SAN MARTIN 321', 'SALTA', 'CAPITAL', 4400, 'honkong@gmail.com', '0387-4227845', '20-2036847-2', 'RI', 'PD', 1, 120, '2023-08-12', 'VENTAS');
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area)
VALUES (4, 'CERRILLANA', 'SAN LUIS 951', 'SALTA', 'CAPITAL', 4400, 'cerrillana@gmail.com', '0387-4226398', '20-2098765-2', 'RI', 'PD', 1, 360, '2023-07-29', 'VENTAS');
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area) 
VALUES (5, 'CLEMENTES', 'AV. DEL VICENTENARIO 652', 'SALTA', 'CAPITAL', 4400, 'clement_56@gmail.com', '0387-4568712', '20-2056781-2', 'RI', 'DEUDOR', 1, 240, '2023-08-10', 'VENTAS');
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area) 
VALUES (6, 'DANI', 'DEL MILAGRO 789', 'SALTA', 'CAPITAL', 4400, 'dani.p@gmail.com', '0387-4223697', '21-2356784-2', 'RI', 'DEUDOR', 1, 1800, '2023-08-25', 'VENTAS');
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area) 
VALUES (7, 'VERDURAS CLAUDIA', 'MITRE 870', 'SALTA', 'CAPITAL', 4400, 'v.clara@gmail.com', '0387-4221596', '20-2025636-2', 'RI', 'PD', 1, 17, '2023-08-23', 'VENTAS');
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area) 
VALUES (8, 'BODEGON.SA', 'PEDERNERA 987', 'SALTA', 'CAPITAL', 4400, 'bodegonsa@gmail.com', '0387-4225465', '20-2087951-2', 'AR', 'DEUDOR', 1, 590, '2023-08-26', 'VENTAS');
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area) 
VALUES (9, 'OPEN 25', 'RIVADAVIA 958', 'SALTA', 'CAPITAL', 4400, 'open25.salta@gmail.com', '0387-4224152', '20-1948689-2', 'AR', 'CANCELADO', 1, 20, '2023-08-26', 'VENTAS');
INSERT INTO CLIENTES (Id_clientes, Nombre_cliente, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Condicion_de_pago, Codigo_Zona, Numero_de_compras, Fecha_ultima_compra, Nombre_area) 
VALUES (10, 'MARTINEZ.SA', 'BALCARCE 611', 'SALTA', 'CAPITAL', 4400, 'martinezsa@gmail.com', '0387-4226548', '22-2011111-2', 'AR', 'CANCELADO', 1, 30, '2020-08-22', 'VENTAS');

SELECT *
FROM PEDIDOS;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PEDIDOS`
-- -----------------------------------------------------
INSERT INTO PEDIDOS (Id_pedido, Id_proveedor, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Fecha, Id_producto, Cantidad, Precio_x_unidad, Tipo_de_Factura, TotalNeto) 
VALUES (1, 1, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', '2023-08-25', NULL, 36, '560.00', 'A', 20160.00);
INSERT INTO PEDIDOS (Id_pedido, Id_proveedor, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Fecha, Id_producto, Cantidad, Precio_x_unidad, Tipo_de_Factura, TotalNeto) 
VALUES (2, 1, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', '2023-08-02', NULL, 98, '560.00', 'A', 54880.00);
INSERT INTO PEDIDOS (Id_pedido, Id_proveedor, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Fecha, Id_producto, Cantidad, Precio_x_unidad, Tipo_de_Factura, TotalNeto) 
VALUES (3, 1, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', '2023-08-01', NULL, 63, '560.00', 'A', 35280.00);
INSERT INTO PEDIDOS (Id_pedido, Id_proveedor, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Fecha, Id_producto, Cantidad, Precio_x_unidad, Tipo_de_Factura, TotalNeto) 
VALUES (4, 1, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', '2023-07-29', NULL, 75, '700.00', 'A', 52500.00);
INSERT INTO PEDIDOS (Id_pedido, Id_proveedor, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Fecha, Id_producto, Cantidad, Precio_x_unidad, Tipo_de_Factura, TotalNeto) 
VALUES (5, 1, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', '2023-07-25', NULL, 80, '500.00', 'A', 400000.00);
INSERT INTO PEDIDOS (Id_pedido, Id_proveedor, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Fecha, Id_producto, Cantidad, Precio_x_unidad, Tipo_de_Factura, TotalNeto) 
VALUES (6, 2, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', '2023-07-24', NULL, 30, '1250.00', 'A', 37500.00);
INSERT INTO PEDIDOS (Id_pedido, Id_proveedor, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Fecha, Id_producto, Cantidad, Precio_x_unidad, Tipo_de_Factura, TotalNeto) 
VALUES (7, 2, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', '2023-07-24', NULL, 15, '890.00', 'A', 13350.00);


SELECT *
FROM VENTAS;

-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`VENTAS`
-- -----------------------------------------------------
INSERT INTO VENTAS (Id_factura, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Id_clientes, Codigo_Zona, Condicion_de_pago, Fecha, Descuentos, Observasiones, Id_producto, Precio_x_unidad, TotalNeto, Cantidad, Tipo_de_Factura) 
VALUES (1, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', 1, 2, 'CANCELADO', '2023-08-24', '0%', '-', NULL, 560.00, 12880.00, 23, 'A');
INSERT INTO VENTAS (Id_factura, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Id_clientes, Codigo_Zona, Condicion_de_pago, Fecha, Descuentos, Observasiones, Id_producto, Precio_x_unidad, TotalNeto, Cantidad, Tipo_de_Factura) 
VALUES (2, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', 2, 1, 'CANCELADO', '2023-08-17', '0%', '-', NULL, 560.00, 33600.00, 60, 'A');
INSERT INTO VENTAS (Id_factura, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Id_clientes, Codigo_Zona, Condicion_de_pago, Fecha, Descuentos, Observasiones, Id_producto, Precio_x_unidad, TotalNeto, Cantidad, Tipo_de_Factura) 
VALUES (3, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', 3, 1, 'PD', '2023-08-14', '0%', '-', NULL, 560.00, 22400.00, 40, 'A');
INSERT INTO VENTAS (Id_factura, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Id_clientes, Codigo_Zona, Condicion_de_pago, Fecha, Descuentos, Observasiones, Id_producto, Precio_x_unidad, TotalNeto, Cantidad, Tipo_de_Factura) 
VALUES (4, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', 4, 1, 'PD', '2023-08-10', '0%', '-', NULL, 1250.00, 25000.00, 20, 'A');
INSERT INTO VENTAS (Id_factura, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Id_clientes, Codigo_Zona, Condicion_de_pago, Fecha, Descuentos, Observasiones, Id_producto, Precio_x_unidad, TotalNeto, Cantidad, Tipo_de_Factura) 
VALUES (5, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', 5, 1, 'DEUDOR', '2023-08-04', '0%', '-', NULL, 890.00, 106800.00, 120, 'A');
INSERT INTO VENTAS (Id_factura, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Id_clientes, Codigo_Zona, Condicion_de_pago, Fecha, Descuentos, Observasiones, Id_producto, Precio_x_unidad, TotalNeto, Cantidad, Tipo_de_Factura) 
VALUES (6, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', 6, 1, 'DEUDOR', '2023-07-30', '0%', '-', NULL, 700.00, 10500.00, 15, 'A');
INSERT INTO VENTAS (Id_factura, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Id_clientes, Codigo_Zona, Condicion_de_pago, Fecha, Descuentos, Observasiones, Id_producto, Precio_x_unidad, TotalNeto, Cantidad, Tipo_de_Factura) 
VALUES (7, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', 7, 1, 'PD', '2023-07-30', '0%', '-', NULL, 1200.00, 14400.00, 12, 'A');

SELECT *
FROM `TI - PERSONAL DE SUCURSALES`;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - PERSONAL DE SUCURSALES`
-- -----------------------------------------------------
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (1, 1);
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (2, 1);
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (3, 1);
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (4, 1);
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (5, 1);
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (6, 1);
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (7, 1);
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (8, 1);
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (9, 1);
INSERT INTO `TI - PERSONAL DE SUCURSALES` (Id_personal, Id_sucursal) VALUES (10, 1);

SELECT *
FROM `TI- PROVEEDORES DE SUCURSALES`;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI- PROVEEDORES DE SUCURSALES`
-- -----------------------------------------------------
INSERT INTO `TI- PROVEEDORES DE SUCURSALES` (Id_sucursal, Id_proveedor) VALUES(1, 1);
INSERT INTO `TI- PROVEEDORES DE SUCURSALES` (Id_sucursal, Id_proveedor) VALUES(1, 2);
INSERT INTO `TI- PROVEEDORES DE SUCURSALES` (Id_sucursal, Id_proveedor) VALUES(1, 3);
INSERT INTO `TI- PROVEEDORES DE SUCURSALES` (Id_sucursal, Id_proveedor) VALUES(2, 1);
INSERT INTO `TI- PROVEEDORES DE SUCURSALES` (Id_sucursal, Id_proveedor) VALUES(2, 2);
INSERT INTO `TI- PROVEEDORES DE SUCURSALES` (Id_sucursal, Id_proveedor) VALUES(2, 3);
INSERT INTO `TI- PROVEEDORES DE SUCURSALES` (Id_sucursal, Id_proveedor) VALUES(3, 1);
INSERT INTO `TI- PROVEEDORES DE SUCURSALES` (Id_sucursal, Id_proveedor) VALUES(3, 2);
INSERT INTO `TI- PROVEEDORES DE SUCURSALES` (Id_sucursal, Id_proveedor) VALUES(3, 3);


SELECT *
FROM `TI - CLIENTES DE SUCURSALES`;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - CLIENTES DE SUCURSALES`
-- -----------------------------------------------------
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 1);
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 2);
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 3);
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 4);
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 5);
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 6);
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 7);
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 8);
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 9);
INSERT INTO`TI - CLIENTES DE SUCURSALES` (Id_sucursal, Id_clientes) VALUES (1, 10);

SELECT *
FROM `TI - PRODUCTOS DE SUCURSALES`;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - PRODUCTOS DE SUCURSALES`
-- -----------------------------------------------------
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 1);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 2);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 3);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 4);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 5);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 6);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 7);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 8);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 9);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (1, 10);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 1);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 2);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 3);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 4);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 5);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 6);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 7);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 8);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 9);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (2, 10);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 1);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 2);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 3);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 4);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 5);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 6);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 7);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 8);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 9);
INSERT INTO`TI - PRODUCTOS DE SUCURSALES` (Id_sucursal, Id_producto) VALUES (3, 10);

SELECT *
FROM `TI - PRODUCTOS VENTAS`;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - PRODUCTOS VENTAS`
-- -----------------------------------------------------
INSERT INTO`TI - PRODUCTOS VENTAS` (Id_producto, Id_factura) VALUES (1, 1);
INSERT INTO`TI - PRODUCTOS VENTAS` (Id_producto, Id_factura) VALUES (2, 2);
INSERT INTO`TI - PRODUCTOS VENTAS` (Id_producto, Id_factura) VALUES (3, 3);
INSERT INTO`TI - PRODUCTOS VENTAS` (Id_producto, Id_factura) VALUES (9, 4);
INSERT INTO`TI - PRODUCTOS VENTAS` (Id_producto, Id_factura) VALUES (10, 5);
INSERT INTO`TI - PRODUCTOS VENTAS` (Id_producto, Id_factura) VALUES (7, 6);
INSERT INTO`TI - PRODUCTOS VENTAS` (Id_producto, Id_factura) VALUES (8, 7);

SELECT *
FROM `TI -PRODUCTOS PEDIDOS`;
-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI -PRODUCTOS PEDIDOS`
-- -----------------------------------------------------
INSERT INTO `TI -PRODUCTOS PEDIDOS` (Id_producto, Id_pedido) VALUES (1, 1);
INSERT INTO `TI -PRODUCTOS PEDIDOS` (Id_producto, Id_pedido) VALUES (2, 2);
INSERT INTO `TI -PRODUCTOS PEDIDOS` (Id_producto, Id_pedido) VALUES (5, 3);
INSERT INTO `TI -PRODUCTOS PEDIDOS` (Id_producto, Id_pedido) VALUES (7, 4);
INSERT INTO `TI -PRODUCTOS PEDIDOS` (Id_producto, Id_pedido) VALUES (8, 5);
INSERT INTO `TI -PRODUCTOS PEDIDOS` (Id_producto, Id_pedido) VALUES (9, 6);
INSERT INTO `TI -PRODUCTOS PEDIDOS` (Id_producto, Id_pedido) VALUES (10, 7);

-- -----------------------------------------------------
-- Vistas 
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Vista 1 Productos de cada proveedor.
-- -----------------------------------------------------
create view view_productos_proveedor1 as
select Id_proveedor as Proveedor, Id_producto as Productos, Nombre_producto as Nombre_del_Producto
from `Kalimera Distribution`.PRODUCTOS
where Id_proveedor = 1;



select Id_proveedor as Proveedor, Id_producto as Productos, Nombre_producto as Nombre_del_Producto
from `Kalimera Distribution`.PRODUCTOS
where Id_proveedor = 2;

-- -----------------------------------------------------
-- Vista 2 - iva de ventas
-- -----------------------------------------------------
create view IVA as
SELECT Id_factura, Precio_x_unidad, Cantidad, TotalNeto, (TotalNeto * 0.21) as IVA, (TotalNeto - (TotalNeto * 0.21)) as TotalNeto_menos_IVA 
FROM `Kalimera Distribution`.VENTAS;


-- -----------------------------------------------------
-- Vista 3 - Suma de pedidos
-- -----------------------------------------------------
create view Suma_de_pedidos as
SELECT count(Id_pedido) as NdePedidos, sum(TotalNeto)as Total_gastado_en_pedidos 
FROM `Kalimera Distribution`.PEDIDOS;


-- -----------------------------------------------------
-- Vista 4 - Muestra de clientes deudores
-- -----------------------------------------------------
create view Muestra_de_clientes_deudores as
SELECT Id_clientes, Nombre_cliente, Condicion_de_pago
FROM `Kalimera Distribution`.CLIENTES
WHERE Condicion_de_pago = 'DEUDOR';

-- -----------------------------------------------------
-- Vista 5 - Nombre del proveedor del producto: CocaCola
-- -----------------------------------------------------
create view Nombre_del_prov_del_producto_CocaCola as
select prod.Id_producto, prod.Nombre_producto, prod.Id_proveedor, prov.Nombre_proveedor   
from PRODUCTOS as prod inner join PROVEEDORES as prov  
where prod.Id_proveedor = prov.Id_proveedor and prov.Id_proveedor = 2;

-- -----------------------------------------------------
-- Vista 6  - Antiguedad de los empleados 
-- -----------------------------------------------------
create view vw_antiguedad as
select Id_personal, Nombre_personal, Fecha_de_ingreso, timestampdiff(Year, Fecha_de_ingreso, CURDATE()) AS Antiguedad
from PERSONAL;


-- -----------------------------------------------------
-- Funciones
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Funcion 1 - Calcular el Total Neto
-- -----------------------------------------------------
delimiter // 
CREATE DEFINER=`root`@`localhost` FUNCTION `fn_TotalNeto`(unidades int, precio float) RETURNS float
    NO SQL
BEGIN
	declare TotalN float;
    SET TotalN = (unidades * precio);
   
RETURN TotalN;
END//;

-- -----------------------------------------------------
-- Funcion 2 - Cantidad de Productos del Proveedor 
-- -----------------------------------------------------
delimiter // 
CREATE DEFINER=`root`@`localhost` FUNCTION `fn_productos_proveedor`(Id_proveedor integer) RETURNS int
    NO SQL
BEGIN

RETURN (SELECT  count(*) from Productos p where p.Id_proveedor = Id_proveedor);
END//;
-- -----------------------------------------------------
-- Funcion 3 - ANTIGUEDAD
-- -----------------------------------------------------
delimiter // 
CREATE DEFINER=`root`@`localhost` FUNCTION `fn_antiguedad`(Id_personal int) RETURNS int
    NO SQL
BEGIN

RETURN(select timestampdiff(Year, Fecha_de_ingreso, CURDATE()) from PERSONAL p where p.Id_personal = Id_personal);
END//;
-- -----------------------------------------------------
-- Storerd Procedure 
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Storerd Procedure - BUSQUEDA PRODUCTOS
-- -----------------------------------------------------
delimiter // 
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_busqueda_productos`(in Nombre_product varchar(50))
BEGIN
select Id_producto, Nombre_producto, Id_proveedor, Precio_x_unidad, Stock
from PRODUCTOS
WHERE Nombre_producto LIKE concat('%',Nombre_product,'%');
END//;
-- -----------------------------------------------------
-- Storerd Procedure - Agregar un nuevo miembro al personal
-- -----------------------------------------------------
delimiter // 
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_new_personal`(IN Nom TEXT(50), IN Direc VARCHAR(70), IN Prov TEXT(45), IN Locali TEXT(45), IN CP INT, IN Mail VARCHAR(50), IN Tel VARCHAR(45), 
IN CUIT VARCHAR(45), IN Areas TEXT(45),IN F_ingreso DATETIME, IN CBU INT , IN Id_sucursal INT)
BEGIN
INSERT INTO PERSONAL (Nombre_personal,Direccion,Provincia,Localidad,CP,Mail,Telefono,CUIT,Nombre_area,Fecha_de_ingreso,CBU,Id_sucursal) 
VALUES (Nom, Direc,Prov,Locali,CP,Mail,Tel,CUIT,Areas,F_ingreso,CBU,Id_sucursal);
END//;

-- -----------------------------------------------------
-- Storerd Procedure - Precio Prodcutos
-- -----------------------------------------------------
delimiter // 
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_precio de productos`(in precio decimal)
BEGIN
select count(*)
from PRODUCTOS
WHERE Precio_x_unidad LIKE concat(precio);
END//; 

-- -----------------------------------------------------
-- Storerd Procedure - Ordenacion clientes de forma ascendente o descendente
-- -----------------------------------------------------
delimiter //
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ordenacion_cliente`(in Campo varchar(50), in asc_desc text(4))
BEGIN
	set @or_asc_desc = asc_desc;
	 IF Campo <> '' THEN
		set @cliente_ord = concat('ORDER BY ', Campo, ' ', @or_asc_desc);
	ELSE
		SET @cliente_ord = '';
	END IF;
    SET @clausula = concat('SELECT * FROM CLIENTES ', @cliente_ord);
    PREPARE runSQL from @clausula;
    EXECUTE runSQL;
    DEALLOCATE PREPARE runSQL;
END//
delimiter ;


-- -----------------------------------------------------
-- TRIGGER`. AFTER - CREACION DE EMPLEADOS
-- -----------------------------------------------------
CREATE TABLE `MOVIMIENTOS` (
  `Id_Movimientos` int NOT NULL AUTO_INCREMENT,
  `Descripcion_movimiento` varchar(200) DEFAULT NULL,
  `Fecha` datetime DEFAULT CURRENT_TIMESTAMP,
  `USUARIO` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`Id_Movimientos`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;



DELIMITER //
CREATE TRIGGER log_creacion_empleado after insert on `Kalimera Distribution`.PERSONAL
FOR EACH ROW BEGIN
	INSERT INTO MOVIMIENTOS (Descripcion_movimiento, USUARIO)
    VALUES (concat('Se sumo un nuevo miembro al staff: ',NEW.Nombre_personal,'ID: ',NEW.Id_personal,'Sucursal: ',NEW.Id_sucursal),CURRENT_USER());
end//
delimiter ;



INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES (11, 'COSTA KALIMERA', 'IRUYA 784', 'SALTA', 'CAPITAL', 4400, 'c.kametra@gmail.com', '0387-4958745', '20-19387965-4', 'ADMINISTRACION', '2002-01-01', 235689745, 1);
INSERT INTO PERSONAL (Id_personal, Nombre_personal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, Nombre_area, Fecha_de_ingreso, CBU, Id_sucursal) 
VALUES('12', 'MAURO CATO', 'LOS TILOS 987', 'SALTA', 'CAPITAL', '4400', 'm.cato@gmail.com', '0387-5896532', '20-38458977-4', 'STOCK', '2021-05-09 00:00:00', '235689741', '1');

SELECT * FROM `Kalimera Distribution`.PERSONAL;
SELECT * FROM`Kalimera Distribution`.MOVIMIENTOS;



-- -----------------------------------------------------
-- TRIGGER`. BEFORE - CAMBIO DE PRECIO DE PRODUCTOS 
-- -----------------------------------------------------
CREATE TABLE `PRECIOS_ACTUALIZADOS` (
  `Nombre_producto` varchar(45) DEFAULT NULL,
  `Precio_x_unidad` decimal(12,0) DEFAULT NULL,
  `Precio_x_unidad_nuevo` decimal(12,0) DEFAULT NULL,
  `Usuario` varchar(45) DEFAULT NULL,
  `Fecha` datetime DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


CREATE TRIGGER tg_actualizacion_precios  BEFORE UPDATE ON `Kalimera Distribution`.PRODUCTOS
FOR EACH ROW INSERT INTO PRECIOS_ACTUALIZADOS (Nombre_producto, Precio_x_unidad, Precio_x_unidad_nuevo, Usuario) 
VALUES (OLD.Nombre_producto, OLD.Precio_x_unidad, NEW.Precio_x_unidad, CURRENT_USER() );



update PRODUCTOS set Precio_x_unidad = 561.00 where Id_producto = 1;
-- -----------------------------------------------------
-- Usuarios
-- -----------------------------------------------------
select * from mysql.user;


-- -----------------------------------------------------
-- Usuario 1 - Usuario Lectura
-- -----------------------------------------------------
CREATE USER 'usuario1'@'localhost' IDENTIFIED BY '123456';
GRANT SELECT ON `Kalimera Distribution`.* to 'usuario1'@'localhost';
SHOW GRANTS FOR 'usuario1'@'localhost';
REVOKE DELETE ON `Kalimera Distribution`.* from 'usuario1'@'localhost';




-- -----------------------------------------------------
-- Usuario 2  - Usuario Lectura, Insercion y Modificar
-- -----------------------------------------------------
CREATE USER 'usuario2'@'localhost' IDENTIFIED BY '456789';
GRANT select,update,insert ON `Kalimera Distribution`.* to 'usuario2'@'localhost';
SHOW GRANTS FOR 'usuario2'@'localhost';
REVOKE DELETE ON `Kalimera Distribution`.* from 'usuario2'@'localhost';


-- -----------------------------------------------------
-- TCL 
-- -----------------------------------------------------

-- -----------------------------------------------------
-- TCL TABLA 1
-- -----------------------------------------------------
-- Iniciamos la transaccion
START TRANSACTION;
-- Establecemos el autocommit en 0
SET AUTOCOMMIT =0;
-- EJECUTAMOS EL SQL
-- Borrado de registro de la tabla TI -PRODUCTOS PEDIDOS
delete from `Kalimera Distribution`.`TI -PRODUCTOS PEDIDOS` where Id_pedido = 7;
-- Borrado de registro de la tabla PEDIDOS
DELETE FROM PEDIDOS WHERE Id_pedido = 7;
-- ejecutamos un rollback
rollback;
-- CONFIRMAMOS LOS CAMBIOS
COMMIT;
-- SENTENCIA DE RECUPERACION DE REGISTROS BORRADOS
/*INSERT INTO PEDIDOS (Id_pedido, Id_proveedor, Id_sucursal, Direccion, Provincia, Localidad, CP, Mail, Telefono, CUIT, IVA, Fecha, Id_producto, Cantidad, Precio_x_unidad, Tipo_de_Factura, TotalNeto) 
VALUES (7, 2, 1, 'RIVADAVIA 660', 'SALTA', 'CAPITAL', 4400, 'kalim_salta@gmail.com', '0387-4224255', '24-35897856-4', 'AR', '2023-07-24', NULL, 15, '890.00', 'A', 13350.00);
INSERT INTO `TI -PRODUCTOS PEDIDOS` (Id_producto, Id_pedido) VALUES (10, 7);*/

-- -----------------------------------------------------
-- TCL TABLA 2
-- -----------------------------------------------------
-- Iniciamos la transaccion
START TRANSACTION;
-- Establecemos el autocommit en 0
SET AUTOCOMMIT =0;
-- EJECUTAMOS EL SQL
-- INSERTAMOS 4 REGISTROS
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (11, 'SPRITE 1.50L', 1, 'BEBIDAS', 2, 800.00, 6, 50, '0%', 110, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (12, 'SPRITE 2.25L', 1, 'BEBIDAS', 2, 1200.00, 6, 50, '0%', 700, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (13, 'FANTA 1.50L', 1, 'BEBIDAS', 2, 750.00, 6, 50, '0%', 100, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (14, 'FANTA 2.25L', 1, 'BEBIDAS', 2, 1100.00, 6, 50, '0%', 900, 'STOCK');
-- SELECT * FROM `Kalimera Distribution`.PRODUCTOS;
-- INSERTAMOS SAVEPOINT LOTE_1
savepoint lote_1;
-- INSERTAMOS REGISTROS 4-8
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area)
VALUES (15, 'SCHWEPPES 1.50L', 1, 'BEBIDAS', 2, 900.00, 6, 50, '0%', 230, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (16, 'SCHWEPPES 2.25L', 1, 'BEBIDAS', 2, 1400.00, 6, 50, '0%', 560, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (17, 'VIVERE SUAVIZANTE CLASICO 3.0L', 2, 'LIMPIEZA', 3, 3200.00, 10, 200, '0%', 400, 'STOCK');
INSERT INTO PRODUCTOS (Id_producto, Nombre_producto, Codigo_rubro, Nombre_rubro, Id_proveedor, Precio_x_unidad, Unidades_x_Bulto, Unidades_x_Pallets, Descuentos, Stock, Nombre_area) 
VALUES (18, 'VIVERE SUAVIZANTE LAVANDA 3.0L', 2, 'LIMPIEZA', 3, 3300.00, 10, 200, '0%', 250, 'STOCK');
-- INSERTAMOS SAVEPOINT LOTE_1
savepoint lote_2;
-- Sentencia de eliminación del savepoint de los primeros 4 registros insertados
-- RELEASE SAVEPOINT lote_1;

-- ejecutamos un rollback
-- ROLLBACK ;
-- CONFIRMAMOS LOS CAMBIOS
COMMIT;




