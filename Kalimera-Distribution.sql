-- MySQL Script generated by MySQL Workbench
-- Tue Aug 22 17:43:16 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Kalimera Distribution
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Kalimera Distribution
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Kalimera Distribution` DEFAULT CHARACTER SET utf8 ;
USE `Kalimera Distribution` ;

-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`KALIMERA DISTRIBUTION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`KALIMERA DISTRIBUTION` (
  `Id_sucursal` INT NOT NULL AUTO_INCREMENT,
  `Nombre_sucursal` TEXT(45) NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  `Id_clientes` INT NOT NULL,
  `Id_producto` INT NOT NULL,
  `Id_proveedor` INT NOT NULL,
  `Id_personal` INT NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `Codigo Postal` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Id_sucursal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PERSONAL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`PERSONAL` (
  `Id_personal` INT NOT NULL AUTO_INCREMENT,
  `Nombre_personal` TEXT(50) NOT NULL,
  `PERSONALcol` VARCHAR(45) NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `Codigo Postal` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  `Fecha_de_ingreso` DATETIME NOT NULL,
  `CBU` INT NOT NULL,
  `Id_sucursal` INT NOT NULL,
  PRIMARY KEY (`Id_personal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PROVEEDORES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`PROVEEDORES` (
  `Id_proveedor` INT NOT NULL AUTO_INCREMENT,
  `Nombre_proveedor` VARCHAR(45) NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `Codigo Postal` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `IVA` VARCHAR(45) NOT NULL,
  `Condicion de pago` TEXT(30) NOT NULL,
  `Codigo_rubro` INT NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  PRIMARY KEY (`Id_proveedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PRODUCTOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`PRODUCTOS` (
  `Id_producto` INT NOT NULL AUTO_INCREMENT,
  `Nombre_producto` VARCHAR(45) NOT NULL,
  `Codigo_rubro` INT NOT NULL,
  `Nombre_rubro` TEXT(50) NOT NULL,
  `Id_proveedor` INT NOT NULL,
  `Precio x unidad` DECIMAL(3) NOT NULL,
  `Unidades x Bulto` INT NOT NULL,
  `Unidades x Pallets` INT NULL,
  `Descuentos` VARCHAR(30) NOT NULL,
  `Stock` INT NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  PRIMARY KEY (`Id_producto`),
  INDEX `id_proveedor_idx` (`Id_proveedor` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCTOS_PROVEEDORES`
    FOREIGN KEY (`Id_proveedor`)
    REFERENCES `Kalimera Distribution`.`PROVEEDORES` (`Id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`CLIENTES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`CLIENTES` (
  `Id_clientes` INT NOT NULL AUTO_INCREMENT,
  `Nombre_cliente` VARCHAR(45) NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `Codigo Postal` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `IVA` VARCHAR(45) NOT NULL,
  `Condicion de pago` TEXT(30) NOT NULL,
  `Codigo Zona` INT NOT NULL,
  `Numero de compras` INT NOT NULL,
  `Fecha ultima compra` DATETIME NOT NULL,
  `Nombre_area` TEXT(45) NOT NULL,
  PRIMARY KEY (`Id_clientes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`PEDIDOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`PEDIDOS` (
  `Id_pedido` INT NOT NULL AUTO_INCREMENT,
  `Id_proveedor` INT NOT NULL,
  `Id_sucursal` INT NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `Codigo Postal` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `IVA` VARCHAR(45) NOT NULL,
  `Fecha` DATETIME NOT NULL,
  `id_producto` INT NOT NULL,
  `Cantidad` INT NOT NULL,
  `Precio x unidad` DECIMAL(3) NOT NULL,
  `Tipo de Factura` TEXT(3) NOT NULL,
  `TotalNeto` DECIMAL(3) NOT NULL,
  PRIMARY KEY (`Id_pedido`),
  INDEX `id_sucursal_idx` (`Id_sucursal` ASC) VISIBLE,
  INDEX `id_proveedor_idx` (`Id_proveedor` ASC) VISIBLE,
  CONSTRAINT `fk_PEDIDOS_SUCURSAL3`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`KALIMERA DISTRIBUTION` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PEDIDOS_PROVEEDORES`
    FOREIGN KEY (`Id_proveedor`)
    REFERENCES `Kalimera Distribution`.`PROVEEDORES` (`Id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`VENTAS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`VENTAS` (
  `Id_factura` INT NOT NULL,
  `Id_sucursal` INT NOT NULL,
  `Direccion` VARCHAR(70) NOT NULL,
  `Provincia` TEXT(45) NOT NULL,
  `Localidad` TEXT(45) NOT NULL,
  `Codigo Postal` INT NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `Telefono` VARCHAR(45) NOT NULL,
  `CUIT` VARCHAR(45) NOT NULL,
  `IVA` VARCHAR(45) NOT NULL,
  `Id_clientes` INT NOT NULL,
  `Codigo Zona` INT NOT NULL,
  `Condicion de pago` TEXT(30) NOT NULL,
  `Fecha` DATETIME NOT NULL,
  `Descuentos` VARCHAR(30) NOT NULL,
  `Observasiones` VARCHAR(225) NOT NULL,
  `Id_producto` INT NOT NULL,
  `Precio x unidad` DECIMAL(3) NOT NULL,
  `TotalNeto` DECIMAL(3) NOT NULL,
  `Cantidad` INT NOT NULL,
  `Tipo de Factura` TEXT(3) NOT NULL,
  PRIMARY KEY (`Id_factura`),
  INDEX `id_clientes_idx` (`Id_clientes` ASC) VISIBLE,
  INDEX `Id_sucursal_idx` (`Id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_VENTAS_CLIENTES`
    FOREIGN KEY (`Id_clientes`)
    REFERENCES `Kalimera Distribution`.`CLIENTES` (`Id_clientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VENTAS_SUCURSAL2`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`KALIMERA DISTRIBUTION` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - PERSONAL DE SUCURSALES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI - PERSONAL DE SUCURSALES` (
  `Id_personal` INT NOT NULL COMMENT 'TI = Tabla intermedia: se realizo esta tabla con el objetivo de mostrar la relación de la tabla de hechos con la tabla personal. Se establece una relación de N-N, ya que según al existir varias sucursales estas tienen mucho personal que pueden compartir o no.',
  `Id_sucursal` INT NOT NULL,
  PRIMARY KEY (`Id_personal`, `Id_sucursal`),
  INDEX `fk_PERSONAL_has_KALIMERA DISTRIBUTION_KALIMERA DISTRIBUTION_idx` (`Id_sucursal` ASC) VISIBLE,
  INDEX `fk_PERSONAL_has_KALIMERA DISTRIBUTION_PERSONAL1_idx` (`Id_personal` ASC) VISIBLE,
  CONSTRAINT `fk_PERSONAL_has_KALIMERA DISTRIBUTION_PERSONAL1`
    FOREIGN KEY (`Id_personal`)
    REFERENCES `Kalimera Distribution`.`PERSONAL` (`Id_personal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PERSONAL_has_KALIMERA DISTRIBUTION_KALIMERA DISTRIBUTION1`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`KALIMERA DISTRIBUTION` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI- PROVEEDORES DE SUCURSALES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI- PROVEEDORES DE SUCURSALES` (
  `Id_sucursal` INT NOT NULL COMMENT 'TI = Tabla intermedia: se realizo esta tabla con el objetivo de mostrar la relación de la tabla de hechos con la tabla PROVEEDORES. Se establece una relación de N-N, ya que según al existir varias sucursales estas tienen diferentes proveedores que pueden tener interacción con mas de una sucursal.',
  `Id_proveedor` INT NOT NULL,
  PRIMARY KEY (`Id_sucursal`, `Id_proveedor`),
  INDEX `fk_KALIMERA DISTRIBUTION_has_PROVEEDORES_PROVEEDORES1_idx` (`Id_proveedor` ASC) VISIBLE,
  INDEX `fk_KALIMERA DISTRIBUTION_has_PROVEEDORES_KALIMERA DISTRIBUT_idx` (`Id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_PROVEEDORES_KALIMERA DISTRIBUTION1`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`KALIMERA DISTRIBUTION` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_PROVEEDORES_PROVEEDORES1`
    FOREIGN KEY (`Id_proveedor`)
    REFERENCES `Kalimera Distribution`.`PROVEEDORES` (`Id_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - CLIENTES DE SUCURSALES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI - CLIENTES DE SUCURSALES` (
  `Id_sucursal` INT NOT NULL COMMENT 'TI = Tabla intermedia: se realizo esta tabla con el objetivo de mostrar la relación de la tabla de hechos con la tabla Clientes. Se establece una relación de N-N, ya que según al existir varias sucursales estas tienen diferentes clientes que pueden tener interacción con mas de una sucursal.',
  `Id_clientes` INT NOT NULL,
  PRIMARY KEY (`Id_sucursal`, `Id_clientes`),
  INDEX `fk_KALIMERA DISTRIBUTION_has_CLIENTES_CLIENTES1_idx` (`Id_clientes` ASC) VISIBLE,
  INDEX `fk_KALIMERA DISTRIBUTION_has_CLIENTES_KALIMERA DISTRIBUTION_idx` (`Id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_CLIENTES_KALIMERA DISTRIBUTION1`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`KALIMERA DISTRIBUTION` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_CLIENTES_CLIENTES1`
    FOREIGN KEY (`Id_clientes`)
    REFERENCES `Kalimera Distribution`.`CLIENTES` (`Id_clientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - PRODUCTOS DE SUCURSALES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI - PRODUCTOS DE SUCURSALES` (
  `Id_sucursal` INT NOT NULL COMMENT 'TI = Tabla intermedia: se realizo esta tabla con el objetivo de mostrar la relación de la tabla de hechos con la tabla PRODUCTOS. Se establece una relación de N-N, ya que según al existir varias sucursales estas tienen diferentes productos que pueden o no comercializarse en una o en otras.',
  `Id_producto` INT NOT NULL,
  PRIMARY KEY (`Id_sucursal`, `Id_producto`),
  INDEX `fk_KALIMERA DISTRIBUTION_has_PRODUCTOS_PRODUCTOS1_idx` (`Id_producto` ASC) VISIBLE,
  INDEX `fk_KALIMERA DISTRIBUTION_has_PRODUCTOS_KALIMERA DISTRIBUTIO_idx` (`Id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_PRODUCTOS_KALIMERA DISTRIBUTION1`
    FOREIGN KEY (`Id_sucursal`)
    REFERENCES `Kalimera Distribution`.`KALIMERA DISTRIBUTION` (`Id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_KALIMERA DISTRIBUTION_has_PRODUCTOS_PRODUCTOS1`
    FOREIGN KEY (`Id_producto`)
    REFERENCES `Kalimera Distribution`.`PRODUCTOS` (`Id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI - PRODUCTOS VENTAS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI - PRODUCTOS VENTAS` (
  `Id_producto` INT NOT NULL,
  `Id_factura` INT NOT NULL,
  PRIMARY KEY (`Id_producto`, `Id_factura`),
  INDEX `fk_PRODUCTOS_has_VENTAS_VENTAS1_idx` (`Id_factura` ASC) VISIBLE,
  INDEX `fk_PRODUCTOS_has_VENTAS_PRODUCTOS1_idx` (`Id_producto` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCTOS_has_VENTAS_PRODUCTOS1`
    FOREIGN KEY (`Id_producto`)
    REFERENCES `Kalimera Distribution`.`PRODUCTOS` (`Id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCTOS_has_VENTAS_VENTAS1`
    FOREIGN KEY (`Id_factura`)
    REFERENCES `Kalimera Distribution`.`VENTAS` (`Id_factura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Kalimera Distribution`.`TI -PRODUCTOS PEDIDOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Kalimera Distribution`.`TI -PRODUCTOS PEDIDOS` (
  `Id_producto` INT NOT NULL,
  `Id_pedido` INT NOT NULL,
  PRIMARY KEY (`Id_producto`, `Id_pedido`),
  INDEX `fk_PEDIDOS_has_PRODUCTOS_PRODUCTOS2_idx` (`Id_producto` ASC) VISIBLE,
  INDEX `fk_PEDIDOS_has_PRODUCTOS_PEDIDOS2_idx` (`Id_pedido` ASC) VISIBLE,
  CONSTRAINT `fk_PEDIDOS_has_PRODUCTOS_PEDIDOS2`
    FOREIGN KEY (`Id_pedido`)
    REFERENCES `Kalimera Distribution`.`PEDIDOS` (`Id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PEDIDOS_has_PRODUCTOS_PRODUCTOS2`
    FOREIGN KEY (`Id_producto`)
    REFERENCES `Kalimera Distribution`.`PRODUCTOS` (`Id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
